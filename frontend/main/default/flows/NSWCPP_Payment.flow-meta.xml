<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <actionCalls>
        <name>Get_UUID</name>
        <label>Get UUID</label>
        <locationX>182</locationX>
        <locationY>134</locationY>
        <actionName>NSWCPPClientUtilsGetUUID</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Try_Payment_Platform</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <nameSegment>NSWCPPClientUtilsGetUUID</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Initiate_Payment</name>
        <label>Initiate Payment</label>
        <locationX>182</locationX>
        <locationY>350</locationY>
        <actionName>NSWCPPOperationInitiate</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Request_Payment</targetReference>
        </connector>
        <flowTransactionModel>NewTransaction</flowTransactionModel>
        <inputParameters>
            <name>agencyTransactionId</name>
            <value>
                <elementReference>Get_UUID</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>amount</name>
            <value>
                <elementReference>Amount</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>customerReference</name>
            <value>
                <elementReference>Customer_Reference</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>productDescription</name>
            <value>
                <elementReference>Product_Description</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NSWCPPOperationInitiate</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Mark_Payment_Pending</name>
        <label>Mark Payment Pending</label>
        <locationX>50</locationX>
        <locationY>674</locationY>
        <actionName>NSWCPPOperationPend</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Payment_Request_Success</targetReference>
        </connector>
        <flowTransactionModel>Automatic</flowTransactionModel>
        <inputParameters>
            <name>duplicate</name>
            <value>
                <elementReference>Request_Payment.duplicate</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>id</name>
            <value>
                <elementReference>Initiate_Payment</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>paymentReference</name>
            <value>
                <elementReference>Request_Payment.paymentReference</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NSWCPPOperationPend</nameSegment>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <actionCalls>
        <name>Request_Payment</name>
        <label>Request Payment</label>
        <locationX>182</locationX>
        <locationY>458</locationY>
        <actionName>NSWCPPCalloutRequestPayment</actionName>
        <actionType>apex</actionType>
        <connector>
            <targetReference>Was_Payment_Req_Successful</targetReference>
        </connector>
        <flowTransactionModel>NewTransaction</flowTransactionModel>
        <inputParameters>
            <name>agencyTransactionId</name>
            <value>
                <elementReference>Transaction_ID</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>amount</name>
            <value>
                <elementReference>Amount</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>customerReference</name>
            <value>
                <elementReference>Customer_Reference</elementReference>
            </value>
        </inputParameters>
        <inputParameters>
            <name>productDescription</name>
            <value>
                <elementReference>Product_Description</elementReference>
            </value>
        </inputParameters>
        <nameSegment>NSWCPPCalloutRequestPayment</nameSegment>
        <storeOutputAutomatically>true</storeOutputAutomatically>
        <versionSegment>1</versionSegment>
    </actionCalls>
    <apiVersion>61.0</apiVersion>
    <decisions>
        <name>Was_Payment_Req_Successful</name>
        <label>Was Payment Request Successful</label>
        <locationX>182</locationX>
        <locationY>566</locationY>
        <defaultConnector>
            <targetReference>Payment_Error</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Other Response</defaultConnectorLabel>
        <rules>
            <name>Successful_Response</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Request_Payment.nswCppStatusCode</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <numberValue>200.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Mark_Payment_Pending</targetReference>
            </connector>
            <label>Successful Response</label>
        </rules>
    </decisions>
    <description>Example payment flow using NSW CPP</description>
    <environments>Default</environments>
    <interviewLabel>NSWCPP Payment Flow {!$Flow.CurrentDateTime}</interviewLabel>
    <label>NSWCPP Payment</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <screens>
        <name>Payment_Error</name>
        <label>Payment Failed</label>
        <locationX>314</locationX>
        <locationY>674</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>PaymentErrorMessage</name>
            <fieldText>&lt;p&gt;There was an error submitting your payment request.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Error Code: {!Request_Payment.nswCppStatusCode}&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Payment_Request_Success</name>
        <label>Payment Requested</label>
        <locationX>50</locationX>
        <locationY>782</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <fields>
            <name>SuccessMessage</name>
            <fieldText>&lt;p&gt;Payment has been Requested.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;Payment Reference: &lt;strong style=&quot;background-color: rgb(255, 255, 255); color: rgb(68, 68, 68);&quot;&gt;{!Request_Payment.paymentReference}&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Payment URL: &lt;a href=&quot;{!Request_Payment.nswCppPaymentURL}&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;{!Request_Payment.nswCppPaymentURL}ï»¿&lt;/a&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>DuplicatePaymentText</name>
            <fieldText>&lt;p&gt;&lt;em&gt;Note: This has been identified as a duplicate request.&lt;/em&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
            <visibilityRule>
                <conditionLogic>and</conditionLogic>
                <conditions>
                    <leftValueReference>Request_Payment.duplicate</leftValueReference>
                    <operator>EqualTo</operator>
                    <rightValue>
                        <booleanValue>true</booleanValue>
                    </rightValue>
                </conditions>
            </visibilityRule>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Try_Payment_Platform</name>
        <label>Try Payment Platform</label>
        <locationX>182</locationX>
        <locationY>242</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Initiate_Payment</targetReference>
        </connector>
        <fields>
            <name>IntroductionText</name>
            <fieldText>&lt;h2&gt;Payment Example Flow&lt;/h2&gt;&lt;p&gt;In this sample flow, we let you set the customer reference, amount due and product description. In real life, the last two would be pre-set based on a selection the user made previously or e.g. on the content of a shopping cart.&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>Transaction_ID</name>
            <dataType>String</dataType>
            <defaultValue>
                <elementReference>Get_UUID</elementReference>
            </defaultValue>
            <fieldText>Transaction ID</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isReadOnly>
                <booleanValue>true</booleanValue>
            </isReadOnly>
            <isRequired>true</isRequired>
        </fields>
        <fields>
            <name>Amount</name>
            <dataType>Currency</dataType>
            <fieldText>Amount</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <scale>2</scale>
        </fields>
        <fields>
            <name>Customer_Reference</name>
            <dataType>String</dataType>
            <fieldText>Customer Reference</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>false</isRequired>
        </fields>
        <fields>
            <name>Product_Description</name>
            <dataType>String</dataType>
            <fieldText>Product Description</fieldText>
            <fieldType>InputField</fieldType>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>56</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_UUID</targetReference>
        </connector>
    </start>
    <status>Active</status>
</Flow>
